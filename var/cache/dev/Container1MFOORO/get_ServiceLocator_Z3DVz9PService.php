<?php

namespace Container1MFOORO;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_Z3DVz9PService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.z3DVz9P' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.z3DVz9P'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\Api\\Access\\CreateAccessController::createAccess' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Access\\CreateAccessController::createAccess()', 'getCreateAccessControllercreateAccessService', true],
            'App\\Controller\\Api\\Access\\DeleteAccessController::deleteAccess' => ['privates', '.service_locator.rDOPgG4.App\\Controller\\Api\\Access\\DeleteAccessController::deleteAccess()', 'getDeleteAccessControllerdeleteAccessService', true],
            'App\\Controller\\Api\\Access\\DeleteAccessController::deleteAccessById' => ['privates', '.service_locator.rDOPgG4.App\\Controller\\Api\\Access\\DeleteAccessController::deleteAccessById()', 'getDeleteAccessControllerdeleteAccessByIdService', true],
            'App\\Controller\\Api\\Access\\GetAccessController::getAllAccesses' => ['privates', '.service_locator.gjRRpgV.App\\Controller\\Api\\Access\\GetAccessController::getAllAccesses()', 'getGetAccessControllergetAllAccessesService', true],
            'App\\Controller\\Api\\Access\\GetAccessController::getAccessById' => ['privates', '.service_locator.gjRRpgV.App\\Controller\\Api\\Access\\GetAccessController::getAccessById()', 'getGetAccessControllergetAccessByIdService', true],
            'App\\Controller\\Api\\Access\\UpdateAccessController::updateAccess' => ['privates', '.service_locator.rDOPgG4.App\\Controller\\Api\\Access\\UpdateAccessController::updateAccess()', 'getUpdateAccessControllerupdateAccessService', true],
            'App\\Controller\\Api\\Logs\\LogsController::getLogs' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Logs\\LogsController::getLogs()', 'getLogsControllergetLogsService', true],
            'App\\Controller\\Api\\Roles\\CreateRolesController::createOrUpdateRole' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Roles\\CreateRolesController::createOrUpdateRole()', 'getCreateRolesControllercreateOrUpdateRoleService', true],
            'App\\Controller\\Api\\Roles\\DeleteRolesController::deleteRole' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Roles\\DeleteRolesController::deleteRole()', 'getDeleteRolesControllerdeleteRoleService', true],
            'App\\Controller\\Api\\Roles\\GetRolesController::getAllRoles' => ['privates', '.service_locator.JYjVmeV.App\\Controller\\Api\\Roles\\GetRolesController::getAllRoles()', 'getGetRolesControllergetAllRolesService', true],
            'App\\Controller\\Api\\Roles\\GetRolesController::getRoleById' => ['privates', '.service_locator.wwQwNTi.App\\Controller\\Api\\Roles\\GetRolesController::getRoleById()', 'getGetRolesControllergetRoleByIdService', true],
            'App\\Controller\\Api\\Roles\\UpdateRolesController::updateRole' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Roles\\UpdateRolesController::updateRole()', 'getUpdateRolesControllerupdateRoleService', true],
            'App\\Controller\\Api\\Taches\\CreateTachesController::createTaches' => ['privates', '.service_locator.1vYYTk9.App\\Controller\\Api\\Taches\\CreateTachesController::createTaches()', 'getCreateTachesControllercreateTachesService', true],
            'App\\Controller\\Api\\Taches\\DeleteTachesController::deleteTache' => ['privates', '.service_locator.iT0Q6IK.App\\Controller\\Api\\Taches\\DeleteTachesController::deleteTache()', 'getDeleteTachesControllerdeleteTacheService', true],
            'App\\Controller\\Api\\Taches\\GetTachesController::getTache' => ['privates', '.service_locator.EZqD8Bz.App\\Controller\\Api\\Taches\\GetTachesController::getTache()', 'getGetTachesControllergetTacheService', true],
            'App\\Controller\\Api\\Taches\\GetTachesController::getAllTaches' => ['privates', '.service_locator.EZqD8Bz.App\\Controller\\Api\\Taches\\GetTachesController::getAllTaches()', 'getGetTachesControllergetAllTachesService', true],
            'App\\Controller\\Api\\Taches\\UpdateTachesController::updateTache' => ['privates', '.service_locator.z1CvAtW.App\\Controller\\Api\\Taches\\UpdateTachesController::updateTache()', 'getUpdateTachesControllerupdateTacheService', true],
            'App\\Controller\\Api\\Users\\BulkMailController::sendBulkEmail' => ['privates', '.service_locator.0ISJ3L0.App\\Controller\\Api\\Users\\BulkMailController::sendBulkEmail()', 'getBulkMailControllersendBulkEmailService', true],
            'App\\Controller\\Api\\Users\\DeleteUsers\\DeleteUsersController::deleteUser' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Users\\DeleteUsers\\DeleteUsersController::deleteUser()', 'getDeleteUsersControllerdeleteUserService', true],
            'App\\Controller\\Api\\Users\\ListUsers\\ListUsersController::GetUsers' => ['privates', '.service_locator.EbGcv8Z.App\\Controller\\Api\\Users\\ListUsers\\ListUsersController::GetUsers()', 'getListUsersControllerGetUsersService', true],
            'App\\Controller\\Api\\Users\\Login\\LoginController::login' => ['privates', '.service_locator.w2c5uqp.App\\Controller\\Api\\Users\\Login\\LoginController::login()', 'getLoginControllerloginService', true],
            'App\\Controller\\Api\\Users\\Login\\LoginController::verify2FA' => ['privates', '.service_locator..ByJPfl.App\\Controller\\Api\\Users\\Login\\LoginController::verify2FA()', 'getLoginControllerverify2FAService', true],
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::requestReset' => ['privates', '.service_locator.o6cYhft.App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::requestReset()', 'getPasswordResetControllerrequestResetService', true],
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::resetPassword' => ['privates', '.service_locator.S_leduv.App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::resetPassword()', 'getPasswordResetControllerresetPasswordService', true],
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::changePassword' => ['privates', '.service_locator.A84gqGd.App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::changePassword()', 'getPasswordResetControllerchangePasswordService', true],
            'App\\Controller\\Api\\Users\\UpdateUsers\\UpdateUsersController::updateUser' => ['privates', '.service_locator.QFZXOVR.App\\Controller\\Api\\Users\\UpdateUsers\\UpdateUsersController::updateUser()', 'getUpdateUsersControllerupdateUserService', true],
            'App\\Controller\\Projets\\UpdateProjetsController::patchProjet' => ['privates', '.service_locator.ZFE8q1P.App\\Controller\\Projets\\UpdateProjetsController::patchProjet()', 'getUpdateProjetsControllerpatchProjetService', true],
            'App\\Controller\\SecurityController::login' => ['privates', '.service_locator.3QECKYg.App\\Controller\\SecurityController::login()', 'getSecurityControllerloginService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\Api\\Access\\CreateAccessController:createAccess' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Access\\CreateAccessController::createAccess()', 'getCreateAccessControllercreateAccessService', true],
            'App\\Controller\\Api\\Access\\DeleteAccessController:deleteAccess' => ['privates', '.service_locator.rDOPgG4.App\\Controller\\Api\\Access\\DeleteAccessController::deleteAccess()', 'getDeleteAccessControllerdeleteAccessService', true],
            'App\\Controller\\Api\\Access\\DeleteAccessController:deleteAccessById' => ['privates', '.service_locator.rDOPgG4.App\\Controller\\Api\\Access\\DeleteAccessController::deleteAccessById()', 'getDeleteAccessControllerdeleteAccessByIdService', true],
            'App\\Controller\\Api\\Access\\GetAccessController:getAllAccesses' => ['privates', '.service_locator.gjRRpgV.App\\Controller\\Api\\Access\\GetAccessController::getAllAccesses()', 'getGetAccessControllergetAllAccessesService', true],
            'App\\Controller\\Api\\Access\\GetAccessController:getAccessById' => ['privates', '.service_locator.gjRRpgV.App\\Controller\\Api\\Access\\GetAccessController::getAccessById()', 'getGetAccessControllergetAccessByIdService', true],
            'App\\Controller\\Api\\Access\\UpdateAccessController:updateAccess' => ['privates', '.service_locator.rDOPgG4.App\\Controller\\Api\\Access\\UpdateAccessController::updateAccess()', 'getUpdateAccessControllerupdateAccessService', true],
            'App\\Controller\\Api\\Logs\\LogsController:getLogs' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Logs\\LogsController::getLogs()', 'getLogsControllergetLogsService', true],
            'App\\Controller\\Api\\Roles\\CreateRolesController:createOrUpdateRole' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Roles\\CreateRolesController::createOrUpdateRole()', 'getCreateRolesControllercreateOrUpdateRoleService', true],
            'App\\Controller\\Api\\Roles\\DeleteRolesController:deleteRole' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Roles\\DeleteRolesController::deleteRole()', 'getDeleteRolesControllerdeleteRoleService', true],
            'App\\Controller\\Api\\Roles\\GetRolesController:getAllRoles' => ['privates', '.service_locator.JYjVmeV.App\\Controller\\Api\\Roles\\GetRolesController::getAllRoles()', 'getGetRolesControllergetAllRolesService', true],
            'App\\Controller\\Api\\Roles\\GetRolesController:getRoleById' => ['privates', '.service_locator.wwQwNTi.App\\Controller\\Api\\Roles\\GetRolesController::getRoleById()', 'getGetRolesControllergetRoleByIdService', true],
            'App\\Controller\\Api\\Roles\\UpdateRolesController:updateRole' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Roles\\UpdateRolesController::updateRole()', 'getUpdateRolesControllerupdateRoleService', true],
            'App\\Controller\\Api\\Taches\\CreateTachesController:createTaches' => ['privates', '.service_locator.1vYYTk9.App\\Controller\\Api\\Taches\\CreateTachesController::createTaches()', 'getCreateTachesControllercreateTachesService', true],
            'App\\Controller\\Api\\Taches\\DeleteTachesController:deleteTache' => ['privates', '.service_locator.iT0Q6IK.App\\Controller\\Api\\Taches\\DeleteTachesController::deleteTache()', 'getDeleteTachesControllerdeleteTacheService', true],
            'App\\Controller\\Api\\Taches\\GetTachesController:getTache' => ['privates', '.service_locator.EZqD8Bz.App\\Controller\\Api\\Taches\\GetTachesController::getTache()', 'getGetTachesControllergetTacheService', true],
            'App\\Controller\\Api\\Taches\\GetTachesController:getAllTaches' => ['privates', '.service_locator.EZqD8Bz.App\\Controller\\Api\\Taches\\GetTachesController::getAllTaches()', 'getGetTachesControllergetAllTachesService', true],
            'App\\Controller\\Api\\Taches\\UpdateTachesController:updateTache' => ['privates', '.service_locator.z1CvAtW.App\\Controller\\Api\\Taches\\UpdateTachesController::updateTache()', 'getUpdateTachesControllerupdateTacheService', true],
            'App\\Controller\\Api\\Users\\BulkMailController:sendBulkEmail' => ['privates', '.service_locator.0ISJ3L0.App\\Controller\\Api\\Users\\BulkMailController::sendBulkEmail()', 'getBulkMailControllersendBulkEmailService', true],
            'App\\Controller\\Api\\Users\\DeleteUsers\\DeleteUsersController:deleteUser' => ['privates', '.service_locator.egipcEH.App\\Controller\\Api\\Users\\DeleteUsers\\DeleteUsersController::deleteUser()', 'getDeleteUsersControllerdeleteUserService', true],
            'App\\Controller\\Api\\Users\\ListUsers\\ListUsersController:GetUsers' => ['privates', '.service_locator.EbGcv8Z.App\\Controller\\Api\\Users\\ListUsers\\ListUsersController::GetUsers()', 'getListUsersControllerGetUsersService', true],
            'App\\Controller\\Api\\Users\\Login\\LoginController:login' => ['privates', '.service_locator.w2c5uqp.App\\Controller\\Api\\Users\\Login\\LoginController::login()', 'getLoginControllerloginService', true],
            'App\\Controller\\Api\\Users\\Login\\LoginController:verify2FA' => ['privates', '.service_locator..ByJPfl.App\\Controller\\Api\\Users\\Login\\LoginController::verify2FA()', 'getLoginControllerverify2FAService', true],
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController:requestReset' => ['privates', '.service_locator.o6cYhft.App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::requestReset()', 'getPasswordResetControllerrequestResetService', true],
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController:resetPassword' => ['privates', '.service_locator.S_leduv.App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::resetPassword()', 'getPasswordResetControllerresetPasswordService', true],
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController:changePassword' => ['privates', '.service_locator.A84gqGd.App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::changePassword()', 'getPasswordResetControllerchangePasswordService', true],
            'App\\Controller\\Api\\Users\\UpdateUsers\\UpdateUsersController:updateUser' => ['privates', '.service_locator.QFZXOVR.App\\Controller\\Api\\Users\\UpdateUsers\\UpdateUsersController::updateUser()', 'getUpdateUsersControllerupdateUserService', true],
            'App\\Controller\\Projets\\UpdateProjetsController:patchProjet' => ['privates', '.service_locator.ZFE8q1P.App\\Controller\\Projets\\UpdateProjetsController::patchProjet()', 'getUpdateProjetsControllerpatchProjetService', true],
            'App\\Controller\\SecurityController:login' => ['privates', '.service_locator.3QECKYg.App\\Controller\\SecurityController::login()', 'getSecurityControllerloginService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\Api\\Access\\CreateAccessController::createAccess' => '?',
            'App\\Controller\\Api\\Access\\DeleteAccessController::deleteAccess' => '?',
            'App\\Controller\\Api\\Access\\DeleteAccessController::deleteAccessById' => '?',
            'App\\Controller\\Api\\Access\\GetAccessController::getAllAccesses' => '?',
            'App\\Controller\\Api\\Access\\GetAccessController::getAccessById' => '?',
            'App\\Controller\\Api\\Access\\UpdateAccessController::updateAccess' => '?',
            'App\\Controller\\Api\\Logs\\LogsController::getLogs' => '?',
            'App\\Controller\\Api\\Roles\\CreateRolesController::createOrUpdateRole' => '?',
            'App\\Controller\\Api\\Roles\\DeleteRolesController::deleteRole' => '?',
            'App\\Controller\\Api\\Roles\\GetRolesController::getAllRoles' => '?',
            'App\\Controller\\Api\\Roles\\GetRolesController::getRoleById' => '?',
            'App\\Controller\\Api\\Roles\\UpdateRolesController::updateRole' => '?',
            'App\\Controller\\Api\\Taches\\CreateTachesController::createTaches' => '?',
            'App\\Controller\\Api\\Taches\\DeleteTachesController::deleteTache' => '?',
            'App\\Controller\\Api\\Taches\\GetTachesController::getTache' => '?',
            'App\\Controller\\Api\\Taches\\GetTachesController::getAllTaches' => '?',
            'App\\Controller\\Api\\Taches\\UpdateTachesController::updateTache' => '?',
            'App\\Controller\\Api\\Users\\BulkMailController::sendBulkEmail' => '?',
            'App\\Controller\\Api\\Users\\DeleteUsers\\DeleteUsersController::deleteUser' => '?',
            'App\\Controller\\Api\\Users\\ListUsers\\ListUsersController::GetUsers' => '?',
            'App\\Controller\\Api\\Users\\Login\\LoginController::login' => '?',
            'App\\Controller\\Api\\Users\\Login\\LoginController::verify2FA' => '?',
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::requestReset' => '?',
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::resetPassword' => '?',
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController::changePassword' => '?',
            'App\\Controller\\Api\\Users\\UpdateUsers\\UpdateUsersController::updateUser' => '?',
            'App\\Controller\\Projets\\UpdateProjetsController::patchProjet' => '?',
            'App\\Controller\\SecurityController::login' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\Api\\Access\\CreateAccessController:createAccess' => '?',
            'App\\Controller\\Api\\Access\\DeleteAccessController:deleteAccess' => '?',
            'App\\Controller\\Api\\Access\\DeleteAccessController:deleteAccessById' => '?',
            'App\\Controller\\Api\\Access\\GetAccessController:getAllAccesses' => '?',
            'App\\Controller\\Api\\Access\\GetAccessController:getAccessById' => '?',
            'App\\Controller\\Api\\Access\\UpdateAccessController:updateAccess' => '?',
            'App\\Controller\\Api\\Logs\\LogsController:getLogs' => '?',
            'App\\Controller\\Api\\Roles\\CreateRolesController:createOrUpdateRole' => '?',
            'App\\Controller\\Api\\Roles\\DeleteRolesController:deleteRole' => '?',
            'App\\Controller\\Api\\Roles\\GetRolesController:getAllRoles' => '?',
            'App\\Controller\\Api\\Roles\\GetRolesController:getRoleById' => '?',
            'App\\Controller\\Api\\Roles\\UpdateRolesController:updateRole' => '?',
            'App\\Controller\\Api\\Taches\\CreateTachesController:createTaches' => '?',
            'App\\Controller\\Api\\Taches\\DeleteTachesController:deleteTache' => '?',
            'App\\Controller\\Api\\Taches\\GetTachesController:getTache' => '?',
            'App\\Controller\\Api\\Taches\\GetTachesController:getAllTaches' => '?',
            'App\\Controller\\Api\\Taches\\UpdateTachesController:updateTache' => '?',
            'App\\Controller\\Api\\Users\\BulkMailController:sendBulkEmail' => '?',
            'App\\Controller\\Api\\Users\\DeleteUsers\\DeleteUsersController:deleteUser' => '?',
            'App\\Controller\\Api\\Users\\ListUsers\\ListUsersController:GetUsers' => '?',
            'App\\Controller\\Api\\Users\\Login\\LoginController:login' => '?',
            'App\\Controller\\Api\\Users\\Login\\LoginController:verify2FA' => '?',
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController:requestReset' => '?',
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController:resetPassword' => '?',
            'App\\Controller\\Api\\Users\\PasswordReset\\PasswordResetController:changePassword' => '?',
            'App\\Controller\\Api\\Users\\UpdateUsers\\UpdateUsersController:updateUser' => '?',
            'App\\Controller\\Projets\\UpdateProjetsController:patchProjet' => '?',
            'App\\Controller\\SecurityController:login' => '?',
        ]);
    }
}
